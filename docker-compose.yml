services:
  config:
      build:
        context: .
        dockerfile: dockerfile.ssl
      volumes:
        - ./certs:/certs
      command: sh /certs/generate_ssl.sh

  ollama:
      image: ollama/ollama:latest
      restart: unless-stopped
      healthcheck:
        test: ["CMD-SHELL", "ollama ls > /dev/null 2>&1 || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
      environment:
        - OLLAMA_HOST=ollama
      volumes:
        - ollama_models:/root/.ollama
      ports:
        - "11434:11434"
      networks:
        - app_network

  model-puller:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=ollama
    networks:
      - app_network
    entrypoint: sh -c "sleep 5 && ollama pull nomic-embed-text"
      
  nginx:
    image: nginx:latest
    container_name: nginx_ollama
    restart: unless-stopped
    depends_on:
      - config
      - ollama
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    networks:
      app_network:
        ipv4_address: 172.18.0.20

  sql1:
      platform: linux/amd64
      image: sqlservereap.azurecr.io/mssql-sql2025-ctp1-4-release/mssql-server-ubuntu-22.04:17.0.500.4_1
      depends_on: 
        - config
        - nginx
      hostname: sql1
      networks:
        - app_network
      extra_hosts:
        - "model.example.com:172.18.0.20"
      ports:
        - 1433:1433
      volumes:
        - sql-data:/var/opt/mssql
        - ./certs/nginx.crt:/var/opt/mssql/security/ca-certificates/public.crt:ro
      environment:
        - ACCEPT_EULA=Y
        - MSSQL_SA_PASSWORD=S0methingS@Str0ng!

  sql-tools:
    platform: linux/amd64
    image: mcr.microsoft.com/mssql-tools
    container_name: sql_tools
    depends_on:
      - sql1
    networks:
      - app_network
    volumes:
      - ./scripts:/scripts:ro
    entrypoint: /bin/bash -c "
      until /opt/mssql-tools/bin/sqlcmd -S sql1 -U sa -P S0methingS@Str0ng! -Q 'SELECT 1' > /dev/null 2>&1; do
        echo 'Waiting for SQL Server to be ready...';
        sleep 2;
      done;
      /opt/mssql-tools/bin/sqlcmd -S sql1 -U sa -P S0methingS@Str0ng! -i /scripts/configure_model.sql"
    restart: "no"

networks:
  app_network:
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/24"

volumes:
  ollama_models:
  sql-data:
