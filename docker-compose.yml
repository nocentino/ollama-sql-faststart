services:
  config:
      build:
        context: .
        dockerfile: dockerfile.ssl
      volumes:
        - "./certs/:/certs/"
      command: sh /certs/generate_ssl.sh

  ollama:
      image: ollama/ollama:latest
      container_name: ollama
      restart: unless-stopped
      healthcheck:
        test: ["CMD-SHELL", "ollama ls > /dev/null 2>&1 || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
      environment:
        - OLLAMA_HOST=ollama
        - OLLAMA_METAL=1
      volumes:
        - ollama-models:/root/.ollama
      ports:
        - "11434:11434"
      networks:
        - app_network

  model-web:
      image: nginx:latest
      restart: unless-stopped
      depends_on:
        - config
        - ollama
      ports:
        - "443:443"
      volumes:
        - "./config/nginx.conf:/etc/nginx/nginx.conf:ro"
        - "./certs:/etc/nginx/certs:ro"
      networks:
        app_network:

  model-puller:
      image: ollama/ollama:latest
      depends_on:
        ollama:
          condition: service_healthy
      environment:
        - OLLAMA_HOST=ollama
      networks:
        - app_network
      entrypoint: sh -c "sleep 5 && ollama pull nomic-embed-text"

  sql1:
        platform: linux/amd64
        image: mcr.microsoft.com/mssql/server:2025-CTP2.0-ubuntu-22.04
        restart: unless-stopped
        depends_on: 
          - model-web
        hostname: sql1
        networks:
          - app_network
        ports:
          - 1433:1433
        volumes:
          - sql-data:/var/opt/mssql
          - "./certs/nginx.crt:/var/opt/mssql/security/ca-certificates/public.crt:ro"
          - "./backups:/var/opt/mssql/backups/"
        environment:
          - ACCEPT_EULA=Y
          - MSSQL_SA_PASSWORD=S0methingS@Str0ng!

  sql-tools:
      platform: linux/amd64
      image: mcr.microsoft.com/mssql-tools
      restart: "no"
      depends_on:
        model-puller:
          condition: service_completed_successfully
        sql1:
          condition: service_started
      networks:
        - app_network
      volumes:
        - ./scripts:/scripts:ro
      entrypoint: /bin/bash -c "
        until /opt/mssql-tools/bin/sqlcmd -S sql1 -U sa -P S0methingS@Str0ng! -Q 'SELECT 1' > /dev/null 2>&1; do
          echo 'Waiting for SQL Server to be ready...';
          sleep 2;
        done;
        /opt/mssql-tools/bin/sqlcmd -S sql1 -U sa -P S0methingS@Str0ng! -i /scripts/configure_model.sql"


networks:
  app_network:

volumes:
  ollama-models:
  sql-data:
  cert-data:
